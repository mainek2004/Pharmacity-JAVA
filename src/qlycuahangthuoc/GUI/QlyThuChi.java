package qlycuahangthuoc.GUI;

import java.util.Date;
import qlycuahangthuoc.BUS.QlyThuChi_Bus;

import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JTable;
import javax.swing.event.DocumentListener;
import javax.swing.event.UndoableEditListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.Document;
import javax.swing.text.Element;
import javax.swing.text.Position;
import javax.swing.text.Segment;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
//import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Font;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import java.io.FileOutputStream;
import java.io.IOException;
import com.itextpdf.text.pdf.BaseFont;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Mai
 */
public class QlyThuChi extends javax.swing.JFrame {

    QlyThuChi_Bus qlyThuChi_Bus = new QlyThuChi_Bus();
    
    public QlyThuChi() {
        initComponents();
        setLocationRelativeTo(null);
        qlyThuChi_Bus.loadTableDoanhThuData(tbDoanhThu);
        qlyThuChi_Bus.loadTableNhapHangData(tbNhapHang);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbDoanhThu = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbNhapHang = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtTongDoanhThu = new javax.swing.JTextField();
        txtTongChiPhi = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        DateStartDoanhThu = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        DateFinishDoanhThu = new com.toedter.calendar.JDateChooser();
        btnXemDoanhThu = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        DateStartNhapHang = new com.toedter.calendar.JDateChooser();
        DateFinishNhapHang = new com.toedter.calendar.JDateChooser();
        btnXemNhapHang = new javax.swing.JButton();
        btnInDThu = new javax.swing.JButton();
        btnInChiPhi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tbDoanhThu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã HĐ", "Ngày lập", "Số lượng", "Thành tiền"
            }
        ));
        jScrollPane1.setViewportView(tbDoanhThu);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Bảng thống kê doanh thu cửa hàng");

        tbNhapHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã phiếu", "Ngày nhập", "Mã thuốc", "Số lượng", "Thành tiền"
            }
        ));
        jScrollPane2.setViewportView(tbNhapHang);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("Bảng thống kê chi phí nhập hàng");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 22)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 255));
        jLabel3.setText("THỐNG KÊ CỬA HÀNG THUỐC");

        jLabel4.setText("Tổng doanh thu: ");

        jLabel5.setText("Tổng chi phí:");

        jLabel6.setText("Xem từ ngày:");

        jLabel7.setText("đến:");

        btnXemDoanhThu.setText("Xem");
        btnXemDoanhThu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXemDoanhThuActionPerformed(evt);
            }
        });

        jLabel8.setText("Xem từ ngày:");

        jLabel9.setText("đến ngày:");

        btnXemNhapHang.setText("Xem");
        btnXemNhapHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXemNhapHangActionPerformed(evt);
            }
        });

        btnInDThu.setText("In");
        btnInDThu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInDThuActionPerformed(evt);
            }
        });

        btnInChiPhi.setText("In");
        btnInChiPhi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInChiPhiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(312, 312, 312))
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(175, 175, 175)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtTongDoanhThu, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(91, 91, 91)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 438, Short.MAX_VALUE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(18, 18, 18)
                                            .addComponent(DateStartNhapHang, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addGap(18, 18, 18)
                                            .addComponent(DateFinishNhapHang, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(btnXemNhapHang, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnInChiPhi, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                    .addGap(10, 10, 10)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtTongChiPhi, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(35, 35, 35))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(DateStartDoanhThu, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(DateFinishDoanhThu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(btnXemDoanhThu, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(btnInDThu, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(jLabel1)
                        .addGap(267, 267, 267)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(106, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(44, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))
                                .addGap(23, 23, 23)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(DateStartNhapHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(DateStartDoanhThu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnInDThu)))
                            .addComponent(btnInChiPhi))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(DateFinishDoanhThu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(btnXemDoanhThu, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(btnXemNhapHang))
                                    .addComponent(DateFinishNhapHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtTongDoanhThu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtTongChiPhi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnXemDoanhThuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXemDoanhThuActionPerformed
        // TODO add your handling code here:
        // Lấy ngày bắt đầu và kết thúc từ JDateChooser
        Date startDate = DateStartDoanhThu.getDate();
        Date endDate = DateFinishDoanhThu.getDate();

        // Thực hiện thống kê doanh thu
        boolean success = qlyThuChi_Bus.thongKeDoanhThu(tbDoanhThu, startDate, endDate);

        // Xử lý kết quả
        if (success) {
            // Thao tác thống kê thành công

            // Tính tổng doanh thu
            int rowCount = tbDoanhThu.getRowCount();
            double totalRevenue = 0.0;
            for (int i = 0; i < rowCount; i++) {
                String revenueStr = tbDoanhThu.getValueAt(i, 3).toString();
                double revenue = Double.parseDouble(revenueStr);
                totalRevenue += revenue;
            }

            // Hiển thị tổng doanh thu trong ô txtTongDoanhThu
            txtTongDoanhThu.setText(String.valueOf(totalRevenue));
        } else {
            // Thao tác thống kê không thành công
            // Có thể thông báo lỗi cho người dùng hoặc thực hiện các hành động khác
        }
    }//GEN-LAST:event_btnXemDoanhThuActionPerformed

    private void btnXemNhapHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXemNhapHangActionPerformed
        // TODO add your handling code here:
        // Lấy ngày bắt đầu và kết thúc từ JDateChooser
        Date startDate = DateStartNhapHang.getDate();
        Date endDate = DateFinishNhapHang.getDate();

        // Thực hiện thống kê nhập hàng
        boolean success = qlyThuChi_Bus.thongKeNhapHang(tbNhapHang, startDate, endDate);

        // Xử lý kết quả
        if (success) {
            // Thao tác thống kê thành công

            // Tính tổng doanh thu
            int rowCount = tbNhapHang.getRowCount();
            double totalExpenses = 0.0;
            for (int i = 0; i < rowCount; i++) {
                String expenseStr = tbNhapHang.getValueAt(i, 4).toString();
                double expense = Double.parseDouble(expenseStr);
                totalExpenses += expense;
            }

            // Hiển thị tổng doanh thu trong ô txtTongChiPhi
            txtTongChiPhi.setText(String.valueOf(totalExpenses));
        } else {
            // Thao tác thống kê không thành công
            // Có thể thông báo lỗi cho người dùng hoặc thực hiện các hành động khác
        }
    }//GEN-LAST:event_btnXemNhapHangActionPerformed

    private void btnInDThuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInDThuActionPerformed
        // TODO add your handling code here:
        if (xuatPDFDoanhThu(tbDoanhThu)) {
            JOptionPane.showMessageDialog(null,"Xuất PDF thành công !");
        }
        else{
            JOptionPane.showMessageDialog(null,"Xuất không thành công !");
        }
    }//GEN-LAST:event_btnInDThuActionPerformed

    private void btnInChiPhiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInChiPhiActionPerformed
        // TODO add your handling code here:
         if (xuatPDFChiPhi(tbNhapHang)) {
            JOptionPane.showMessageDialog(null,"Xuất PDF thành công !");
        }
        else{
            JOptionPane.showMessageDialog(null,"Xuất không thành công !");
        }
    }//GEN-LAST:event_btnInChiPhiActionPerformed

    // Phương thức xuất PDF
    public boolean xuatPDFDoanhThu(JTable table) {
        boolean thanhCong = false; // Mặc định là thất bại

        com.itextpdf.text.Document document = new com.itextpdf.text.Document();

        try {
            PdfWriter.getInstance(document, new FileOutputStream("DoanhthuCuaHang.pdf"));
            document.open();

            // Tạo font cho tiêu đề cột
            Font fontTieuDe = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.BOLD);

            PdfPTable pdfTable = new PdfPTable(table.getColumnCount());

            // Thêm tiêu đề của các cột với font đã tạo
            for (int i = 0; i < table.getColumnCount(); i++) {
                PdfPCell cell = new PdfPCell(new Phrase(table.getColumnName(i), fontTieuDe));
                pdfTable.addCell(cell);
            }

            // Tạo font cho dữ liệu
            Font fontDuLieu = new Font(Font.FontFamily.TIMES_ROMAN, 10);

            // Thêm dữ liệu từ JTable vào bảng PDF với font đã tạo
            for (int row = 0; row < table.getRowCount(); row++) {
                for (int column = 0; column < table.getColumnCount(); column++) {
                    PdfPCell cell = new PdfPCell(new Phrase(table.getModel().getValueAt(row, column).toString(), fontDuLieu));
                    pdfTable.addCell(cell);
                }
            }

            document.add(pdfTable);

            thanhCong = true; // Nếu không có ngoại lệ, quá trình xuất thành công
        } catch (IOException | DocumentException ex) {
            ex.printStackTrace(); // In ra lỗi nếu có
        } finally {
            // Đảm bảo rằng tài liệu được đóng sau khi hoàn thành
            if (document != null) {
                document.close();
            }
        }

        return thanhCong; // Trả về trạng thái của quá trình xuất (true nếu thành công, false nếu thất bại)
    }
    
    // Phương thức xuất PDF
    public boolean xuatPDFChiPhi(JTable table) {
        boolean thanhCong = false; // Mặc định là thất bại

        com.itextpdf.text.Document document = new com.itextpdf.text.Document();

        try {
            PdfWriter.getInstance(document, new FileOutputStream("ChiPhi.pdf"));
            document.open();

            // Tạo font cho tiêu đề cột
            Font fontTieuDe = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.BOLD);

            PdfPTable pdfTable = new PdfPTable(table.getColumnCount());

            // Thêm tiêu đề của các cột với font đã tạo
            for (int i = 0; i < table.getColumnCount(); i++) {
                PdfPCell cell = new PdfPCell(new Phrase(table.getColumnName(i), fontTieuDe));
                pdfTable.addCell(cell);
            }

            // Tạo font cho dữ liệu
            Font fontDuLieu = new Font(Font.FontFamily.TIMES_ROMAN, 10);

            // Thêm dữ liệu từ JTable vào bảng PDF với font đã tạo
            for (int row = 0; row < table.getRowCount(); row++) {
                for (int column = 0; column < table.getColumnCount(); column++) {
                    PdfPCell cell = new PdfPCell(new Phrase(table.getModel().getValueAt(row, column).toString(), fontDuLieu));
                    pdfTable.addCell(cell);
                }
            }

            document.add(pdfTable);

            thanhCong = true; // Nếu không có ngoại lệ, quá trình xuất thành công
        } catch (IOException | DocumentException ex) {
            ex.printStackTrace(); // In ra lỗi nếu có
        } finally {
            // Đảm bảo rằng tài liệu được đóng sau khi hoàn thành
            if (document != null) {
                document.close();
            }
        }

        return thanhCong; // Trả về trạng thái của quá trình xuất (true nếu thành công, false nếu thất bại)
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QlyThuChi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QlyThuChi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QlyThuChi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QlyThuChi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QlyThuChi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser DateFinishDoanhThu;
    private com.toedter.calendar.JDateChooser DateFinishNhapHang;
    private com.toedter.calendar.JDateChooser DateStartDoanhThu;
    private com.toedter.calendar.JDateChooser DateStartNhapHang;
    private javax.swing.JButton btnInChiPhi;
    private javax.swing.JButton btnInDThu;
    private javax.swing.JButton btnXemDoanhThu;
    private javax.swing.JButton btnXemNhapHang;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tbDoanhThu;
    private javax.swing.JTable tbNhapHang;
    private javax.swing.JTextField txtTongChiPhi;
    private javax.swing.JTextField txtTongDoanhThu;
    // End of variables declaration//GEN-END:variables
}
